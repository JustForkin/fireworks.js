var Fireworks={Emitter:function(a){this._nParticles=void 0!==a.nParticles?a.nParticles:100;this._particles=[];this._spawner=null;this._effects=[];this._onUpdated=null}};Fireworks.Emitter.prototype.destroy=function(){this._effects.forEach(function(a){a.destroy()});this._spawner&&this._spawner.destroy();this._particles.forEach(function(a){a.destroy()})};Fireworks.Emitter.prototype.effects=function(){return this._effects};Fireworks.Emitter.prototype.particles=function(){return this._particles};
Fireworks.Emitter.prototype.liveParticles=function(){return this._liveParticles};Fireworks.Emitter.prototype.deadParticles=function(){return this._deadParticles};Fireworks.Emitter.prototype.setSpawner=function(a){this._spawner=a;return this};Fireworks.Emitter.prototype.setParticleData=function(a,b,c){a[b]=c};Fireworks.Emitter.prototype.getParticleData=function(a,b){console.assert(void 0!==a[b]);return a[b]};
Fireworks.Emitter.prototype.start=function(){console.assert(this._spawner,"a spawner MUST be set");console.assert(0<this._effects.length,"Some effects MUST be set");this._particles=Array(this._nParticles);for(var a=0;a<this._nParticles;a++)this._particles[a]=new Fireworks.Particle;this._liveParticles=[];this._deadParticles=this._particles.slice(0);this._started=!0;this._effects.forEach(function(a){a.onCreate&&this._particles.forEach(function(c){a.onCreate(c)})}.bind(this));return this};
Fireworks.Emitter.prototype.update=function(a){this._spawner.update(this,a);this._effects.forEach(function(b){b.onUpdate&&this._liveParticles.forEach(function(c){b.onUpdate(c,a)})}.bind(this))};Fireworks.Emitter.prototype.killParticle=function(a){var b=this._liveParticles.indexOf(a);console.assert(-1!==b);this._liveParticles.splice(b,1);this._deadParticles.push(a);emitter.effects().forEach(function(b){b.onDeath&&b.onDeath(a)}.bind(this))};
Fireworks.Emitter.prototype.spawnParticle=function(){var a=emitter.deadParticles().pop();emitter.liveParticles().push(a);emitter.effects().forEach(function(b){b.onBirth&&b.onBirth(a)}.bind(this))};Fireworks.Spawner=function(){};Fireworks.Particle=function(){};Fireworks.Effect=function(){};Fireworks.Shape=function(){};Fireworks.Vector=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};
Fireworks.Vector.prototype={constructor:Fireworks.Vector,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},random:function(){this.x=Math.random()-0.5;this.y=Math.random()-0.5;this.z=Math.random()-0.5;return this},toString:function(){return JSON.stringify(this)},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=
a.z+b.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},multiply:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;
this.z*=a;return this},divideSelf:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a):this.z=this.y=this.x=0;return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},
cross:function(a,b){this.x=a.y*b.z-a.z*b.y;this.y=a.z*b.x-a.x*b.z;this.z=a.x*b.y-a.y*b.x;return this},crossSelf:function(a){var b=this.x,c=this.y,d=this.z;this.x=c*a.z-d*a.y;this.y=d*a.x-b*a.z;this.z=b*a.y-c*a.x;return this},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){return(new Fireworks.Vector).sub(this,a).lengthSq()},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},isZero:function(){return 1.0E-4>this.lengthSq()},clone:function(){return new Fireworks.Vector(this.x,
this.y,this.z)}};
